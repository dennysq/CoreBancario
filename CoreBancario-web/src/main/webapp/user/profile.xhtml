<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="/templates/masterTemplate.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://java.sun.com/jsf/facelets" 
                xmlns:pe="http://primefaces.org/ui/extensions"

                >
    <ui:define name="title">Recargas</ui:define>
    <f:metadata>


    </f:metadata>
    <ui:define name="content">

        <h:form id="main_form">
            <p:panel class="no_border" >
                <div class="center_inline">
                    <h1>Recargas</h1>
                </div>
                <p:spacer/>
                <p:remoteCommand name="debitarSaldo" actionListener="#{telefoniaBean.debitar()}"/>
                <p:panelGrid columns="2" styleClass="center_block panel-grid-no-border" >
                    <p:outputLabel for="ip" value="IP Websocket:" rendered="false"/>
                    <p:inputText id="ip" title="Solo caracteres alfanuméricos" 
                                 maxlength="32"  
                                 rendered="false"
                                 readonly="true"
                                 value="#{mainBean.webSocketIp}" >
                        <pe:keyFilter regEx="/[a-z0-9_]/i"/> 
                    </p:inputText>     
                    <p:outputLabel for="puerto" value="Puerto:" rendered="false"/>
                    <p:inputText id="puerto" 
                                 rendered="false"
                                 maxlength="200"  
                                 readonly="true"
                                 value="#{mainBean.webSocketPort}" >
                        <pe:keyFilter regEx="/[a-z_\s]/i"/> 
                    </p:inputText>     
                    <p:outputLabel for="numero"  class="negrita" value="Número Telefónico:"/>
                    <p:inputText id="numero" 
                                 maxlength="10"   
                                 required="true"
                                 
                                 requiredMessage="Ingrese un número telefónico"
                                 value="#{telefoniaBean.numero}" >
                        <pe:keyFilter regEx="/[\d]/"/> 
                    </p:inputText>
                    <p:outputLabel for="monto" value="Monto:" class="negrita"/>
                    <p:inputText id="monto"                                  
                                 value="#{transferenciaBean.monto}" 
                                 maxlength="10"   
                                 required="true"
                                 >
                        <pe:keyFilter regEx="/[\d]/"/> 
                    </p:inputText>
                    <p:spacer/>
                    <p:inputTextarea id="conversacion"/>
                </p:panelGrid>
                <p:spacer/>
                <p:panelGrid id="controllers" columns="2" class="center_block" styleClass="no_border center_block panel-grid-no-border">
                    <p:commandButton value="Abrir Conexion"
                                     onclick="abreWebSocket();"
                                     type="button"
                                     >
                    </p:commandButton>                 
                    <p:commandButton value="Recargar"
                                     onclick="enviaMsg();"
                                     type="button"
                                     >
                    </p:commandButton>                 
                </p:panelGrid>
                <p:spacer/>
            </p:panel>
        </h:form>

        <script type="text/javascript">
            var WSDIR = "ws://192.168.3.106:8082/Telefonica/endpoint";
            var webSocket;
            //Establece la conexión e inicializa el WebSocket
            function abreWebSocket() {
                //Asegura que haya una sola conexión abierta
                if (webSocket !== undefined &amp;&amp; webSocket.readyState !== WebSocket.CLOSED){
                    muestraMensaje("El WebSocket ya está abierto");
                    return;
                }
                //Crea una nueva instancia del WebSocket
                webSocket = new WebSocket(WSDIR);

                //Registra listeners para los eventos del WebSocket
                //onopen: al abrirse la conexión
                //onmessage: al recibir un mensaje
                //onclose: al cerrarse la conexión
                webSocket.onopen = function (event) {
                    muestraMensaje("Conexión abierta");
                };
                webSocket.onmessage = function (event) {
                        if(event.data === '1'){
                                                    debitarSaldo();
                        }
                        muestraMensaje(event.data);
                    
                };
                webSocket.onclose = function (event) {
                    muestraMensaje("Conexión cerrada");
                };
            }

            //Envía el mensaje escrito por el usuario
            function enviaMsg() {
                var msg = document.getElementById("main_form:numero").value + "a" + document.getElementById("main_form:monto").value;
                webSocket.send(msg);
            }
            //Cierra la conexión
            function cierraWebSocket() {
                webSocket.close();
            }
            //Muestra los mensajes de la conversación en la pantalla
            function muestraMensaje(msg) {
                
                        var conversacion = document.getElementById("main_form:conversacion");
                        conversacion.innerHTML +=  msg;
                

            }
        </script>   
    </ui:define>
</ui:composition>

