<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="/templates/masterTemplate.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://java.sun.com/jsf/facelets" 
                xmlns:pe="http://primefaces.org/ui/extensions"

                >
    <ui:define name="title">Excursion</ui:define>
    <f:metadata>


    </f:metadata>
    <ui:define name="content">

        <h:form id="main_form">
            <p:panel class="no_border" >
                <div class="center_inline">
                    <h1>Recargas</h1>
                </div>
                <p:spacer/>
                <p:remoteCommand name="debitarSaldo" actionListener="#{telefoniaBean.debitar()}"/>
                <p:panelGrid columns="2" styleClass="center_block panel-grid-no-border" >
                    <p:outputLabel for="ip" value="IP Websocket:"/>
                    <p:inputText id="ip" title="Solo caracteres alfanuméricos" 
                                 maxlength="32"   
                                 readonly="true"
                                 value="#{mainBean.webSocketIp}" >
                        <pe:keyFilter regEx="/[a-z0-9_]/i"/> 
                    </p:inputText>     
                    <p:outputLabel for="puerto" value="Puerto:"/>
                    <p:inputText id="puerto" 
                                 maxlength="200"  
                                 readonly="true"
                                 value="#{mainBean.webSocketPort}" >
                        <pe:keyFilter regEx="/[a-z_\s]/i"/> 
                    </p:inputText>     
                    <p:outputLabel for="numero" value="Número Telefónico:"/>
                    <p:inputText id="numero" 
                                 maxlength="10"   
                                 required="true"
                                 requiredMessage="Ingrese un número telefónico"
                                 value="#{telefoniaBean.numero}" >
                        <pe:keyFilter regEx="/[\d]/"/> 
                    </p:inputText>
                    <p:outputLabel for="monto" value="Monto:" class="negrita"/>
                    <p:inputText id="monto"                                  
                                 value="#{transferenciaBean.monto}" 
                                 maxlength="10"   
                                 required="true"
                                 >
                        <pe:keyFilter regEx="/[\d]/"/> 
                    </p:inputText>

                </p:panelGrid>
                <p:spacer/>
                <p:panelGrid id="controllers" columns="2" class="center_block" styleClass="no_border center_block panel-grid-no-border">
                    <p:commandButton value="Abrir Conexion"
                                     update="@form"
                                     onclick="abreWebSocket()"

                                     >

                    </p:commandButton>                 
                    <p:commandButton value="Recargar"
                                     update="@form"
                                     onclick="enviaMsg()"

                                     >

                    </p:commandButton>                 


                </p:panelGrid>
                <p:spacer/>
            </p:panel>
        </h:form>

        <script type="text/javascript">

            var webSocket;

            //Establece la conexión e inicializa el WebSocket
            function abreWebSocket() {
                //Asegura que haya una sola conexión abierta
                var ip = document.getElementById("main_form:ip").value;
                var port = document.getElementById("main_form:puerto").value;
                var WSDIR = "ws://" + ip + ":" + port + "/Telefonica/endpoint";
                if (webSocket !== undefined &amp; &amp; webSocket.readyState !== WebSocket.CLOSED) {
                    muestraMensaje("El WebSocket ya está abierto");
                    return;
                }
                //Crea una nueva instancia del WebSocket
                webSocket = new WebSocket(WSDIR);

                //Registra listeners para los eventos del WebSocket
                //onopen: al abrirse la conexión
                //onmessage: al recibir un mensaje
                //onclose: al cerrarse la conexión
                webSocket.onopen = function (event) {
                    muestraMensaje("Conexión abierta");
                };

                webSocket.onmessage = function (event) {
                    var mensaje = event.data;
                    if (mensaje === "1") {
                        muestraMensaje("transaccion exitosa");
                        debitarSaldo();
                    } else {
                        muestraMensaje("transaccion no exitosa");

                    }
                };

                webSocket.onclose = function (event) {
                    muestraMensaje("Conexión cerrada");
                };
            }

            //Envía el mensaje escrito por el usuario
            function enviaMsg() {

                var msg = document.getElementById("main_form:numero").value + "a" + document.getElementById("main_form:monto").value;
                webSocket.send(msg);

            }
            //Cierra la conexión
            function cierraWebSocket() {
                webSocket.close();
            }
            //Muestra los mensajes de la conversación en la pantalla
            function muestraMensaje(msg) {
                var conversacion = document.getElementById("mensaje");
                conversacion.innerHTML += "<br/>" + msg;

            }
        </script>        
    </ui:define>
</ui:composition>

